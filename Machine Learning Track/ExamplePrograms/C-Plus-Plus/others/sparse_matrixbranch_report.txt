    1|       |/** @file
    2|       | * A sparse matrix is a matrix which has number of zeroes greater than
    3|       | * \f$\frac{m\times n}{2}\f$, where m and n are the dimensions of the matrix.
    4|       | */
    5|       |
    6|       |#include <iostream>
    7|       |
    8|       |/** main function */
    9|      1|int main() {
   10|      1|    int m, n;
   11|      1|    int counterZeros = 0;
   12|       |
   13|      1|    std::cout << "Enter dimensions of matrix (seperated with space): ";
   14|      1|    m = 6;
   15|      1|    n = 6;
   16|       |
   17|      1|    int **a = new int *[m];
   18|      7|    for (int i = 0; i < m; i++) a[i] = new int[n];
   19|       |
   20|      1|    std::cout << "Enter matrix elements:";
   21|      1|    std::cout << "\n";
   22|       |
   23|       |    // reads the matrix from stdin
   24|      7|    for (int i = 0; i < m; i++) {
   25|     42|        for (int j = 0; j < n; j++) {
   26|     36|            a[i][j] = i + j;
   27|     36|        }
   28|      6|    }
   29|       |
   30|       |    // counts the zero's
   31|      7|    for (int i = 0; i < m; i++) {
   32|     42|        for (int j = 0; j < n; j++) {
   33|     36|            if (a[i][j] == 0)
   34|      1|                counterZeros++;  // Counting number of zeroes
   35|     36|        }
   36|      6|    }
   37|       |
   38|       |    // makes sure the matrix is a sparse matrix
   39|      1|    if (counterZeros > ((m * n) / 2))  // Checking for sparse matrix
   40|      0|        std::cout << "Sparse matrix";
   41|      1|    else
   42|      1|        std::cout << "Not a sparse matrix";
   43|       |
   44|      7|    for (int i = 0; i < m; i++) delete[] a[i];
   45|      1|    delete[] a;
   46|      1|    return 0;
   47|      1|}

