    1|       |/**
    2|       | * \file
    3|       | * \brief [Interpolation
    4|       | * search](https://en.wikipedia.org/wiki/Interpolation_search) algorithm
    5|       | */
    6|       |#include <iostream>
    7|       |
    8|       |/** function to search the value in an array using interpolation search
    9|       | * \param [in] arr array to search in
   10|       | * \param [in] value value to search for
   11|       | * \param [in] len length of array
   12|       | * \returns index where the value is found
   13|       | * \returns -1 if not found
   14|       | */
   15|      1|int InterpolationSearch(int A[], int n, int x) {
   16|      1|    int low = 0;
   17|      1|    int high = n - 1;
   18|      4|    while (low <= high) {
   19|      3|        int mid = low + (((high - 1) * (x - A[low])) / (A[high] - A[low]));
   20|      3|        if (x == A[mid])
   21|      0|            return mid;  // Found x, return (exit)
   22|      3|        else if (x < A[mid])
   23|      1|            high = mid - 1;  // X lies before mid
   24|      2|        else
   25|      2|            low = mid + 1;  // x lies after mid
   26|      3|    }
   27|       |
   28|      1|    return -1;
   29|      1|}
   30|       |
   31|       |/** main function */
   32|      1|int main() {
   33|      1|    int A[] = {2, 4, 5, 7, 13, 14, 15, 23};
   34|      1|    int x = 17;
   35|       |
   36|       |    ///< passed array A inside the InterpolationSearch function
   37|      1|    int index = InterpolationSearch(A, 8, x);
   38|      1|    if (index < 0)
   39|      1|        std::cout << "Number " << x << " not found" << std::endl;
   40|      0|    else
   41|      0|        std::cout << "Number " << x << " is at " << index << std::endl;
   42|      1|}
   43|       |
   44|       |// randomly set x bcoz array was defined by us , therefore not reasonable for
   45|       |// asking input. We could have asked for input if array elements were inputed by
   46|       |// the user.

