    1|       |/**
    2|       | * \file
    3|       | * \brief C++ program to implement [Jump
    4|       | * Search](https://en.wikipedia.org/wiki/Jump_search)
    5|       | */
    6|       |#include <algorithm>
    7|       |#include <cmath>
    8|       |#include <iostream>
    9|       |
   10|       |/** jump search implementation
   11|       | */
   12|      1|int jumpSearch(int arr[], int x, int n) {
   13|       |    // Finding block size to be jumped
   14|      1|    int step = std::sqrt(n);
   15|       |
   16|       |    // Finding the block where element is
   17|       |    // present (if it is present)
   18|      1|    int prev = 0;
   19|      3|    while (arr[std::min(step, n) - 1] < x) {
   20|      2|        prev = step;
   21|      2|        step += std::sqrt(n);
   22|      2|        if (prev >= n)
   23|      0|            return -1;
   24|      2|    }
   25|       |
   26|       |    // Doing a linear search for x in block
   27|       |    // beginning with prev.
   28|      3|    while (arr[prev] < x) {
   29|      2|        prev++;
   30|       |
   31|       |        // If we reached next block or end of
   32|       |        // array, element is not present.
   33|      2|        if (prev == std::min(step, n))
   34|      0|            return -1;
   35|      2|    }
   36|       |    // If element is found
   37|      1|    if (arr[prev] == x)
   38|      1|        return prev;
   39|       |
   40|      0|    return -1;
   41|      1|}
   42|       |
   43|       |// Driver program to test function
   44|      1|int main() {
   45|      1|    int arr[] = {0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610};
   46|      1|    int x = 55;
   47|      1|    int n = sizeof(arr) / sizeof(arr[0]);
   48|       |
   49|       |    // Find the index of 'x' using Jump Search
   50|      1|    int index = jumpSearch(arr, x, n);
   51|       |
   52|       |    // Print the index where 'x' is located
   53|      1|    std::cout << "\nNumber " << x << " is at index " << index;
   54|      1|    return 0;
   55|      1|}

